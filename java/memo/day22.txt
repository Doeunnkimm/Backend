[실습]
동석이네 동물원에는 3마리의 동물이 있다.
각 동물은 울음 소리가 다르고 2마리의 동물은 동시에 운다.
나머지 1마리 동물은 2마리 동물이 모두 울고 나면 마지막에 운다.

※ 반드시 join()을 사용한다.
※ 각 동물은 10번씩만 운다.
※ 람다식을 사용한다.

-------------------------------------------------------------------------------------------------------

파일 입출력
	# Stream은 개별처리
	# 버퍼는 일괄처리 및 부분 일괄 처리도 가능

   Stream이라는 연결통로를 통해 원본 데이터가 알맞는 인코딩 방식으로 전송된다.
   byte단위로 입출력되기 때문에 개별처리이며, 상세 연산이 필요하지 않다면
   Buffer를 사용한 입출력을 권장한다. Buffer를 사용하면 일괄처리가 가능해진다.

   ※ 인코딩 방식
      인코딩 방식은 완성형과 조합형이 있다.
      - 완성형: 각, 간, 갇, 갈, 감, ... , 갛, ...
      - 조합형: ㄱ + ㅏ + ㄱ

      조합형이 효율적이며 byte단위로 데이터를 전송할 때 고정된 byte가
      아니기 때문에 가변형 인코딩 방식을 선호한다.
      조합형이면서 가변형인 인코딩 방식은 UTF-8이며, 전 세계에서 가장 많이
      사용되는 방식이다.

   Writer(출력)
	BufferedWriter: 버퍼를 사용한 출력 클래스
	FileWriter: 전달한 경로의 파일을 출력하기 위한 목적으로 열어준다.
				전달한 경로에 파일이 없다면 새롭게 만든 후 열어준다.

   Reader(입력)
	BufferedReader: 버퍼를 사용한 입력 클래스
	FileReader: 전달한 경로의 파일을 입력하기 위한 목적으로 열어준다.
				전달한 경로에 파일이 없다면 FileNotFoundException이 발생한다.

   File(파일 정보)
	전달한 경로에 있는 파일의 정보를 담는 타입
	디렉터리 생성, 해당 경로의 전체 파일 목록, 파일 삭제 등

-----------------------------------------------------------------------------------------------------

출력메소드: 오류를 구체화
변수: 저장공간
연산자: 최단산쉬관리삼대, 삼항 연산자(메소드)
제어문: if, switch, for, while
배열: 저장공간의 나열, 한 번에 여러 칸, 길이에 제한, 규칙성 부여
메소드: 저장공간, 화면에서 입력받은 것을 매개변수로 받는다, 사용하는 쪽 생각을 하면서 작성한다.
클래스: 타입이다, 주어이다, 추상적이다, 공통요소를 하나로 묶기, 딱 한 번만 선언하자!
추상클래스: 강제성, 일반 메소드도 선언 가능, 강제성을 없앨 때 쓰기도 한다, 단독으로 쓰면 안될 때
인터페이스: 강제성, 상수, 추상 메소드만 선언가능, 추상 메소드가 한 개 선언되면 함수형 인터페이스
익명클래스: 구현하고 메모리에 올리자!, 구현되지 않은 필드를 구현하기 위한 클래스
예외처리: try{}catch(){}, throw, throws, RuntimeException, Exception
API: 복붙하고 구글링하고 남에 거 갖다쓰자!
Object: toString(), equals(), hashCode()
CollectionFramework: ArrayList, Stream API
Thread: 단일, 멀티, 핵심: run() 재정의 -> 자원, new Thread() : 쓰레드 1개
Date: Date(쓰지말자), Calendar(쓰자), SimpleDateFormat(원하는 형식으로 변경), LocalDateTime, LocalDate
File: Stream(개별), Buffer(개별을 모았다가 한 번에 일괄처리)