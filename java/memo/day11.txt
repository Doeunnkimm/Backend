추상 클래스 

"무조건 재정의 해" -> 부모 클래스에서 메소드를 구현하지 않음 -> 강제성 만드려고 -> 메모리에 바로 할당 X (구현 안 되어 있어서) -> 자식 쪽에서는 이 오류를 재정의를 통해 해결해야 함

	필드 안에 구현이 안된 메소드가 선언되어 있는 클래스를 추상 클래스라고 한다.
		    -------------------------------------------------------
	이때 구현되지 않은 메소드를 추상 메소드라고 부른다.
	반드시 재정의를 통해 구현을 해야지만 메모리에 할당되기 때문에
	"강제성"을 부여하기 위해서 추상 메소드를 선언한다.


추상 클래스 선언
	abstract class 클래스명 { // abstract 키워드를 붙이면 추상 클래스 선언을 의미
		// 클래스는 원래 추상적이어서
		// 추상 메소드나 그냥 메소드나 그냥 변수나 다 모두 선언이 가능
 		abstract 리턴타입 메소드명(매개변수, ...); // 중괄호 없이 -> 구현 X
		// 추상 메소드를 사용하고 싶다면 class 앞에 abstract 키워드를 붙여야 함
	}

	// 추상 클래스가 그냥 클래스보다 넓은 개념이지만
	// 다른 개발자들이 봤을 때는 의미를 찾으려고 하기 때문에
	// 상황에 맞게 강제성의 목적이 있을 때만 추상 클래스를 사용해야 함

-------------------------------------------------------------------------------------------

인터페이스(틀) # 추상 클래스를 고도화 -> 상수랑 추상 메소드만 사용할 수 있음. 즉 여기서 구현하지마
-> 추상 메소드만 있어서 메모리에 바로 올릴 수가 없음(구현이 안 되어 있으니까)
-> 상수는 바로 쓸 수 있어야 함 -> 근데 필드가 메모리에 올라가야 사용할 수 있는데
-> 추상 메소드가 구현이 안 되어 있어서 메모리에 안 올라가 있는데..?
-> 틀은 어느 객체에서 접근해도 똑같아야 함
-> final static으로 선언해서 클래스로 접근하자

	추상 클래스를 고도화시킨 문법, 상수와 추상 메소드만 존재한다.
	구현은 지정한 클래스에서 진행하고, 인터페이스를 다른 클래스에 지정할 때에는 implements 키워드를 사용
